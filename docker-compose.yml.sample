---
name: ezarr
services:
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    # line above must be uncommented to allow external containers to connect.
    # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/connect-a-container-to-gluetun.md#external-container-to-gluetun
    #command: update -enduser -providers surfshark # This is here to update servers, if needed.
    ports:
      - 8080:8080 # access to the Qbittorrent webclient
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    volumes:
      - ${ROOT_DIR}/config/gluetun-config:/config
    environment:
      # See https://github.com/qdm12/gluetun-wiki/tree/main/setup#setup
      # and also https://github.com/qdm12/gluetun-wiki/blob/main/setup/providers/surfshark.md
      - PUID=${SWAG_UID}
      - PGID=${MEDIACENTER_GID}
      - TZ=${TIMEZONE}
      - VPN_SERVICE_PROVIDER=surfshark
      - VPN_TYPE=wireguard
      #- WIREGUARD_PRIVATE_KEY=wOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=
      #- WIREGUARD_ADDRESSES=10.64.222.21/16
      - SERVER_COUNTRIES=Netherlands
      # Server list updater
      # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
      - UPDATER_PERIOD=
  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)
      - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)
      - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
      - 127.0.0.1:2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    restart: unless-stopped

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    environment:
      HOMEPAGE_ALLOWED_HOSTS: # required, may need port. See gethomepage.dev/installation/#homepage_allowed_hosts
      PUID: ${HOMEPAGE_UID}
      PGID: ${MEDIACENTER_GID}
    ports:
      - 3000:3000
    volumes:
      - ${ROOT_DIR}/config/homepage-config:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock:ro # optional, for docker integrations
    restart: unless-stopped

  swag:
    image: lscr.io/linuxserver/swag:latest
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${SWAG_UID}
      - PGID=${MEDIACENTER_GID}
      - TZ=${TIMEZONE}
      - URL=linuxserver-test.com
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare #optional
      - PROPAGATION= #optional
      - DUCKDNSTOKEN= #optional
      - EMAIL= #optional
      - ONLY_SUBDOMAINS=false #optional
      - EXTRA_DOMAINS= #optional
      - STAGING=false #optional
    volumes:
      - ${ROOT_DIR}/config/swag-config:/config
    ports:
      - 443:443
      - 80:80 #optional
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${SONARR_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/sonarr-config:/config
      - ${ROOT_DIR}/data:/data
    ports:
      - "8989:8989"
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${RADARR_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/radarr-config:/config
      - ${ROOT_DIR}/data:/data
    ports:
      - "7878:7878"
    restart: unless-stopped

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${LIDARR_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/lidarr-config:/config
      - ${ROOT_DIR}/data:/data
    ports:
      - "8686:8686"
    restart: unless-stopped

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${READARR_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/readarr-config:/config
      - ${ROOT_DIR}/data:/data
    ports:
      - "8787:8787"
    restart: unless-stopped

  mylar3:
    image: lscr.io/linuxserver/mylar3:latest
    container_name: mylar3
    environment:
      - PUID=${MYLAR_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
    volumes:
      - ${ROOT_DIR}/config/mylar-config:/config
      - ${ROOT_DIR}/data:/data
    ports:
      - "8090:8090"
    restart: unless-stopped

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    environment:
      - user=${AUDIOBOOKSHELF_UID}:${MEDIACENTER_GID}
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/audiobookshelf:/config
      - ${ROOT_DIR}/data/media/audiobooks:/audiobooks
      - ${ROOT_DIR}/data/media/podcasts:/podcasts
      - ${ROOT_DIR}/data/media/audiobookshelf-metadata:/metadata
    ports:
      - "13378:80"
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${BAZARR_UID}
      - PGID=${MEDIACENTER_GID}
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/bazarr-config:/config
      - ${ROOT_DIR}/data/media:/media
    ports:
      - "6767:6767"
    restart: unless-stopped

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - PUID=${JELLYSEERR_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/jellyseerr-config:/app/config
    ports:
      - "5056:5055"
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=${PROWLARR_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/prowlarr-config:/config
    ports:
      - "9696:9696"
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TIMEZONE}
    ports:
      - "8191:8191"
    restart: unless-stopped

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/jellyfin-config:/config
      - ${ROOT_DIR}/data/media:/data
    ports:
      - "8096:8096"
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    # Network mode should be uncommented if/when this service is being run through gluetun
    #network_mode: "service:gluetun"
    environment:
      - PUID=${QBITTORRENT_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
      - WEBUI_PORT=8080
    volumes:
      - ${ROOT_DIR}/config/qbittorrent-config:/config
      - ${ROOT_DIR}/data/torrents:/data/torrents
    ports:
      - "8080:8080"
      - "6881:6881"
      - "6881:6881/udp"
    restart: unless-stopped

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=${SABNZBD_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/sabnzbd-config:/config
      - ${ROOT_DIR}/data/usenet:/data/usenet
    ports:
      - "8081:8080"
    restart: unless-stopped
  glances:
    image: nicolargo/glances:latest
    environment:
      - PUID=${GLANCES_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    restart: unless-stopped
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # Uncomment the below line if you want glances to display host OS detail instead of container's
      - /etc/os-release:/etc/os-release:ro
      - ${ROOT_DIR}/config/glances-config:/config

  speedtest-tracker:
    image: lscr.io/linuxserver/speedtest-tracker:latest
    restart: unless-stopped
    container_name: speedtest-tracker
    ports:
      - 8080:80
      - 8443:443
    environment:
      - PUID=${SPEEDTEST_UID}
      - PGID=${MEDIACENTER_GID}
      - TZ=${TIMEZONE}
      - APP_KEY=base64:+oiq7T218bQUJe7ZI8znt765io3bUVUcQ8xeC/XSimc=
      - DB_CONNECTION=sqlite
    volumes:
      - ${ROOT_DIR)/config/speedtest-tracker-config:/config
      #- /path/to-custom-ssl-keys:/config/keys
